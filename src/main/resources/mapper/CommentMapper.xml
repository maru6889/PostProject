<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.postproject.repository.CommentRepository">
    <select id="findCommentsByPostId" resultType="Comment">
        select *
        from comment
        where post_id = #{postId}
    </select>
    <select id="findCommentById" resultType="Comment">
        select *
        from comment
        where id = #{id}
    </select>
    
    <select id="findCommentWithMemberByPostId" resultMap="CommentDtoResultMap">
        select *
        from comment c
        join member m
        on c.member_id = m.id
        where c.post_id = #{postId}
        order by c.created_at desc
        <if test="limit != null and offset != null">
            limit #{limit} offset #{offset}
        </if>
    </select>
    <select id="countCommentsByPostId" resultType="int">
        select count(*)
        from comment
        where post_id = #{postId}
    </select>
    <insert id="insertComment" useGeneratedKeys="true" keyProperty="id">
        insert into comment (content, post_id, member_id)
        values (#{content}, #{postId}, #{memberId})
    </insert>
    <update id="updateComment">
        update comment
        set content = #{content}
        where id = #{id}
    </update>
    <delete id="deleteComment">
        delete
        from comment
        where id = #{id}
    </delete>
    
    <resultMap id="CommentDtoResultMap" type="CommentDto">
        <id column="id" property="id"/>
        <result column="content" property="content"/>
        <result column="created_at" property="createdAt"/>
        <result column="updated_at" property="updatedAt"/>
        <result column="nickname" property="nickname"/>
        <result column="member_id" property="memberId"/>
    </resultMap>
</mapper>