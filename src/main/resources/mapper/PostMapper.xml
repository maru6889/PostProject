<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.postproject.repository.PostRepository">
    <select id="findPostsByMemberId" resultMap="PostResultMap">
        select *
        from post
        where member_id = #{memberId}
    </select>

    <select id="findPostsWithPaginationAndFilter" resultMap="PostResultMap">
        select *
        from post
        <where>
            <if test="keyword != null">
                title like concat('%', #{keyword}, '%')
            </if>
        </where>
        order by created_at desc
        <if test="limit != null and offset != null">
            limit #{limit} offset #{offset}
        </if>
    </select>

    <select id="findPostsWithMemberAndPaginationAndFilter" resultMap="PostDtoResultMap">
        select p.id, p.title, p.content, p.views, p.created_at, p.updated_at, m.nickname
        from post p
        join member m
        on p.member_id = m.id
        <where>
            <if test="keyword != null">
                p.title like concat('%', #{keyword}, '%')
            </if>
        </where>
        order by p.created_at desc
        <if test="limit != null and offset != null">
            limit #{limit} offset #{offset}
        </if>
    </select>

    <select id="findPostById" resultMap="PostResultMap">
        select *
        from post
        where id = #{id}
    </select>

    <select id="findPostWithMemberById" resultMap="PostDtoResultMap">
        select *
        from post p
                 join member m
                      on p.member_id = m.id
        where p.id = #{id}
    </select>

    <select id="countPosts" resultType="int">
        select count(*)
        from post
        <where>
            <if test="keyword != null">
                title like concat('%', #{keyword}, '%')
            </if>
        </where>
    </select>

    <insert id="insertPost" useGeneratedKeys="true" keyProperty="id" parameterType="Post">
        insert into post (title, content, member_id)
        values (#{title}, #{content}, #{memberId})
    </insert>

    <update id="updatePost" parameterType="Post">
        update post
        <set>
            <if test="title != null">
                title = #{title},
            </if>
            <if test="content != null">
                content = #{content},
            </if>
        </set>
        where id = #{id}
    </update>

    <delete id="deletePost">
        delete
        from post
        where id = #{id};
    </delete>

    <resultMap id="PostResultMap" type="Post">
        <id column="id" property="id"/>
        <result column="title" property="title"/>
        <result column="content" property="content"/>
        <result column="views" property="views"/>
        <result column="created_at" property="createdAt"/>
        <result column="updated_at" property="updatedAt"/>
        <result column="member_id" property="memberId"/>
    </resultMap>

    <resultMap id="PostDtoResultMap" type="PostDto">
        <id column="id" property="id"/>
        <result column="title" property="title"/>
        <result column="content" property="content"/>
        <result column="views" property="views"/>
        <result column="created_at" property="createdAt"/>
        <result column="updated_at" property="updatedAt"/>
        <result column="nickname" property="nickname"/>
    </resultMap>
</mapper>